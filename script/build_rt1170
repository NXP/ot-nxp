#!/bin/bash
#
#  Copyright (c) 2020, The OpenThread Authors.
#  All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions are met:
#  1. Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#  2. Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#  3. Neither the name of the copyright holder nor the
#     names of its contributors may be used to endorse or promote products
#     derived from this software without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
#  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
#  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
#  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
#  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
#  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
#  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
#  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
#  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#  POSSIBILITY OF SUCH DAMAGE.
#

set -exo pipefail

OT_CMAKE_NINJA_TARGET=${OT_CMAKE_NINJA_TARGET:-}

readonly OT_SRCDIR="$(pwd)"
readonly OT_OPTIONS_TRANSCEIVER_K32W0_UART_FLOW_CONTROL=(
    "-DCMAKE_TOOLCHAIN_FILE=src/imx_rt/rt1170/arm-none-eabi.cmake"
    "-DCMAKE_BUILD_TYPE=Debug"
    "-DOT_PLATFORM=external"
    "-DOT_SLAAC=ON"
    "-DOT_EXTERNAL_HEAP=ON"
    "-DOT_EXTERNAL_MBEDTLS=nxp-rt1170-mbedtls"
    "-DOT_STACK_ENABLE_LOG=OFF"
    "-DOT_APP_NCP=OFF"
    "-DOT_APP_RCP=OFF"
    "-DOT_RCP=OFF"
    # Default OT app cli is disabled, instead a freeRTOS version of the CLI is built
    "-DOT_APP_CLI=OFF"
    "-DOT_APP_CLI_FREERTOS=ON"
    "-DOT_BUILD_RT=ON"
    "-DOT_BUILD_RT1170=ON"
    "-DOT_COMPILE_WARNING_AS_ERROR=ON"
    "-DSPINEL_INTERFACE_TYPE=UART"
    "-DMULTICORE_LOGGING=OFF"
    "-DTRANSCEIVER_RESET_DELAY_MS=3000"
)
readonly OT_OPTIONS_TRANSCEIVER_K32W0_SPI=(
    "-DCMAKE_TOOLCHAIN_FILE=src/imx_rt/rt1170/arm-none-eabi.cmake"
    "-DCMAKE_BUILD_TYPE=Debug"
    "-DOT_PLATFORM=external"
    "-DOT_SLAAC=ON"
    "-DOT_EXTERNAL_HEAP=ON"
    "-DOT_EXTERNAL_MBEDTLS=nxp-rt1170-mbedtls"
    "-DOT_STACK_ENABLE_LOG=OFF"
    "-DOT_APP_NCP=OFF"
    "-DOT_APP_RCP=OFF"
    "-DOT_RCP=OFF"
    # Default OT app cli is disabled, instead a freeRTOS version of the CLI is built
    "-DOT_APP_CLI=OFF"
    "-DOT_APP_CLI_FREERTOS=ON"
    "-DOT_BUILD_RT=ON"
    "-DOT_BUILD_RT1170=ON"
    "-DOT_COMPILE_WARNING_AS_ERROR=ON"
    "-DSPINEL_INTERFACE_TYPE=SPI"
    "-DMULTICORE_LOGGING=OFF"
    "-DTRANSCEIVER_RESET_DELAY_MS=3000"
)

readonly OT_OPTIONS_TRANSCEIVER_IWX12_SPI=(
    "-DCMAKE_TOOLCHAIN_FILE=src/imx_rt/rt1170/arm-none-eabi.cmake"
    "-DCMAKE_BUILD_TYPE=Debug"
    "-DOT_PLATFORM=external"
    "-DOT_SLAAC=ON"
    "-DOT_EXTERNAL_HEAP=ON"
    "-DOT_EXTERNAL_MBEDTLS=nxp-rt1170-mbedtls"
    "-DOT_STACK_ENABLE_LOG=OFF"
    "-DOT_APP_NCP=OFF"
    "-DOT_APP_RCP=OFF"
    "-DOT_RCP=OFF"
    # Default OT app cli is disabled, instead a freeRTOS version of the CLI is built
    "-DOT_APP_CLI=OFF"
    "-DOT_APP_CLI_FREERTOS=ON"
    "-DOT_BUILD_RT=ON"
    "-DOT_BUILD_RT1170=ON"
    "-DOT_COMPILE_WARNING_AS_ERROR=ON"
    "-DSPINEL_INTERFACE_TYPE=SPI"
    # Can be enabled to load the IWX12 firmware during RT1170 boot via SDIO
    "-DIWX12_TRANSCEIVER=ON"
    "-DMULTICORE_LOGGING=OFF"
)

build()
{
    local otCliFreeRtosAxfLocation="examples/cli/rtos/ot-cli-rt1170"
    local builddir="${OT_CMAKE_BUILD_DIR:-build_rt1170}"
    mkdir -p "${builddir}"
    cd "${builddir}"
    mkdir -p $1
    cd $1

    # shellcheck disable=SC2068
    cmake -GNinja "${@:3}" "-DSDK_RELEASE=$2" "${OT_SRCDIR}"

    if [[ -n ${OT_CMAKE_NINJA_TARGET[*]} ]]; then
        ninja "${OT_CMAKE_NINJA_TARGET[@]}"
    else
        ninja
    fi

    if [ -f "${otCliFreeRtosAxfLocation}" ]; then
        #move application files to the top
        mv ${otCliFreeRtosAxfLocation} .
    fi

    cd "${OT_SRCDIR}"

    if [ $? -eq 1 ]; then
        exit 1
    fi
}

create_directory_and_build()
{
    if [ "$1" == 'all' ]; then
        build k32w0_uart_flow_control $2 ${OT_OPTIONS_TRANSCEIVER_K32W0_UART_FLOW_CONTROL[@]}
        build k32w0_spi $2 ${OT_OPTIONS_TRANSCEIVER_K32W0_SPI[@]}
        build iwx12_spi $2 ${OT_OPTIONS_TRANSCEIVER_IWX12_SPI[@]}
    elif [ "$1" == 'k32w0_uart_flow_control' ]; then
        build k32w0_uart_flow_control $2 ${OT_OPTIONS_TRANSCEIVER_K32W0_UART_FLOW_CONTROL[@]}
    elif [ "$1" == 'k32w0_spi' ]; then
        build k32w0_spi $2 ${OT_OPTIONS_TRANSCEIVER_K32W0_SPI[@]}
    elif [ "$1" == 'iwx12_spi' ]; then
        build iwx12_spi $2 ${OT_OPTIONS_TRANSCEIVER_IWX12_SPI[@]}
    else
        echo >&2 "Unsupported action: $1. Supported: all, k32w0_uart_flow_control, k32w0_spi, iwx12_spi"
        # 128 for Invalid arguments
        exit 128
    fi
}

main()
{

    # check if environmental variable NXP_RT1170_SDK_ROOT is set
    #     if not, then use "../../../" as a possible path
    # then  check if NXP_RT1170_SDK_ROOT contains a valid SDK
    #     if SW-Content-Register.txt is found
    #         then NXP_RT1170_SDK_ROOT points to a released SDK
    #     else if .gitignore is found
    #         then NXP_RT1170_SDK_ROOT points to a cloned repository

    if [ -z "$NXP_RT1170_SDK_ROOT" ]; then
        NXP_RT1170_SDK_ROOT="../../../"
    fi

    if [ -f $NXP_RT1170_SDK_ROOT/SW-Content-Register.txt ]; then
        SDK_RELEASE=ON
    elif [ -f $NXP_RT1170_SDK_ROOT/.gitmodules ]; then
        SDK_RELEASE=OFF
    else
        echo "Could not found a valid SDK package!"
        return
    fi

    echo "NXP_RT1170_SDK_ROOT set to " $NXP_RT1170_SDK_ROOT

    if [ $# == 0 ]; then
        create_directory_and_build all $SDK_RELEASE
    else
        create_directory_and_build $1 $SDK_RELEASE
    fi
}

main "$@"
